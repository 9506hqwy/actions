name: Artifact
description: Store build artifacts and documentation
inputs:
  configuration:
    description: Configuration to archive
    required: false
    default: Debug
  output-dir:
    description: Directory to store artifacts
    required: false
    default: artifacts
  doc-filename:
    description: Filename for the documentation archive
    required: true
runs:
  using: composite
  steps:
    - name: Generate Crates
      run: |
        Write-Output "::group::cargo build"
        cargo build --release --workspace --all-features --verbose
        cargo build --release --workspace --all-features --examples --verbose
        Write-Output "::endgroup::"
      shell: pwsh

    - name: Generate Documentations
      run: |
        Write-Output "::group::cargo doc"
        cargo doc --workspace --all-features --verbose
        Write-Output "::endgroup::"
      shell: pwsh

    - name: Collect Licenses (normal)
      if: ${{ inputs.configuration == 'Release' }}
      run: |
        echo "::group::cargo-licenses"
        mkdir -p "${OUTPUT_PATH}"
        ./tools/cargo-licenses.sh -o "${OUTPUT_PATH}" -e "normal"
        echo "::endgroup::"
      shell: bash
      env:
        OUTPUT_PATH: ${{ github.workspace }}\target\licenses

    - name: Archive Licenses (normal)
      if: ${{ inputs.configuration == 'Release' }}
      run: |
        Write-Output "::group::zip"
        Compress-Archive -Path '*' -DestinationPath "${env:GITHUB_WORKSPACE}\target\licenses.zip"
        Write-Output "::endgroup::"
      shell: pwsh
      working-directory: ${{ github.workspace }}\target\licenses

    - name: Collect Licenses (dev)
      if: ${{ inputs.configuration == 'Release' }}
      run: |
        echo "::group::cargo-licenses"
        mkdir -p "${OUTPUT_PATH}"
        ./tools/cargo-licenses.sh -o "${OUTPUT_PATH}" -e "normal,dev"
        echo "::endgroup::"
      shell: bash
      env:
        OUTPUT_PATH: ${{ github.workspace }}\target\licenses-dev

    - name: Archive Licenses (dev)
      if: ${{ inputs.configuration == 'Release' }}
      run: |
        Write-Output "::group::zip"
        Compress-Archive -Path '*' -DestinationPath "${env:GITHUB_WORKSPACE}\target\licenses-dev.zip"
        Write-Output "::endgroup::"
      shell: pwsh
      working-directory: ${{ github.workspace }}\target\licenses-dev

    - name: Archive Crates
      run: |
        Write-Output "::group::zip"
        $HOST_TUPLE = "$(rustc --print host-tuple)"
        $TARGETS = @(
          '*.exe',
          '*.dll',
          '*.exp',
          '*.lib'
        )
        $LIBS = @(Get-Item -Path $TARGETS)
        if ($LIBS.Length -gt 0) {
            if (${env:CONFIGURATION} -eq "Release") {
                Copy-Item -Path "${env:GITHUB_WORKSPACE}\target\licenses.zip" -Destination "licenses.zip" -Force
                $LIBS += 'licenses.zip'
            }

            Compress-Archive -Path $LIBS -DestinationPath "${env:OUTPUT_PATH}\${HOST_TUPLE}.zip"
        }
        Write-Output "::endgroup::"
      shell: pwsh
      working-directory: ${{ github.workspace }}\target\release
      env:
        CONFIGURATION: ${{ inputs.configuration }}
        OUTPUT_PATH: ${{ github.workspace }}\${{ inputs.output-dir }}

    - name: Archive Examples
      run: |
        Write-Output "::group::zip"

        if (${env:CONFIGURATION} -eq "Release") {
            Copy-Item -Path "${env:GITHUB_WORKSPACE}\target\licenses-dev.zip" -Destination "licenses-dev.zip" -Force
        }

        $HOST_TUPLE = "$(rustc --print host-tuple)"
        Get-Item -Path '*.exe' |% {
            if ($_.Name.Contains('_') -And (Test-Path (Join-Path $_.Directory $_.Name.Replace('_', '-')))) {
                return
            }

            $EXE = @($_.FullName)
            if (${env:CONFIGURATION} -eq "Release") {
                $EXE += 'licenses-dev.zip'
            }

            $Name = $_.BaseName;
            Compress-Archive -Path $EXE -DestinationPath "${env:OUTPUT_PATH}\${Name}-${HOST_TUPLE}.zip";
        }

        Write-Output "::endgroup::"
      shell: pwsh
      working-directory: ${{ github.workspace }}\target\release\examples
      env:
        CONFIGURATION: ${{ inputs.configuration }}
        OUTPUT_PATH: ${{ github.workspace }}\${{ inputs.output-dir }}

    - name: Archive Documentations
      run: |
        Write-Output "::group::zip"
        Compress-Archive -Path '*' -DestinationPath "${env:DOC_FILE_PATH}"
        Write-Output "::endgroup::"
      shell: pwsh
      working-directory: ${{ github.workspace }}\target\doc
      env:
        DOC_FILE_PATH: ${{ github.workspace }}\${{ inputs.output-dir }}\${{ inputs.doc-filename }}

    - name: Collect Licenses
      if: ${{ inputs.configuration != 'Release' }}
      run: |
        echo "::group::cargo-licenses"
        mkdir -p "${OUTPUT_PATH}"
        ./tools/cargo-licenses.sh -o "${OUTPUT_PATH}"
        echo "::endgroup::"
      shell: bash
      env:
        OUTPUT_PATH: ${{ github.workspace }}\${{ inputs.output-dir }}\licenses
